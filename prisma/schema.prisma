// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("postgresql://neondb_owner:npg_YyEts9mg7bPx@ep-crimson-night-a151sgci-pooler.ap-southeast-1.aws.neon.tech/neondb?sslmode=require")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String?
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())[18:00:34.228] Running build in Washington, D.C., USA (East) â€“ iad1
[18:00:34.230] Build machine configuration: 2 cores, 8 GB
[18:00:34.269] Cloning github.com/majidorc/ota-website (Branch: main, Commit: 85ddd73)
[18:00:34.939] Cloning completed: 670.000ms
[18:00:35.746] Restored build cache from previous deployment (3GrCBoFWw5YEW6LXEMR55vGspAzU)
[18:00:36.462] Running "vercel build"
[18:00:36.912] Vercel CLI 42.2.0
[18:00:37.197] Installing dependencies...
[18:00:40.363] 
[18:00:40.364] > ota-website@0.1.0 postinstall
[18:00:40.364] > prisma generate && prisma db push
[18:00:40.364] 
[18:00:40.376] sh: line 1: prisma: command not found
[18:00:40.380] npm error code 127
[18:00:40.381] npm error path /vercel/path0
[18:00:40.381] npm error command failed
[18:00:40.381] npm error command sh -c prisma generate && prisma db push
[18:00:40.381] npm error A complete log of this run can be found in: /vercel/.npm/_logs/2025-05-31T11_00_37_418Z-debug-0.log
[18:00:40.423] Error: Command "npm install" exited with 127
[18:00:40.699] 
[18:00:43.460] Exiting build container
  updatedAt     DateTime  @updatedAt
  bookings      Booking[]
  reviews       Review[]
  wishlist      Activity[] @relation("UserWishlist")
}

model Activity {
  id              String    @id @default(cuid())
  title           String
  shortDescription String
  fullDescription String
  highlights      String[]
  inclusions      String[]
  exclusions      String[]
  locations       String[]
  keywords        String[]
  price           Float
  duration        Int       // in hours
  maxGroupSize    Int
  minAge          Int?
  difficulty      Difficulty
  category        Category
  status          Status    @default(DRAFT)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  bookings        Booking[]
  reviews         Review[]
  wishlistedBy    User[]    @relation("UserWishlist")
  images          Image[]
  schedules       Schedule[]
}

model Booking {
  id          String    @id @default(cuid())
  userId      String
  activityId  String
  scheduleId  String
  status      BookingStatus @default(PENDING)
  participants Int
  totalPrice  Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  activity    Activity  @relation(fields: [activityId], references: [id])
  schedule    Schedule  @relation(fields: [scheduleId], references: [id])
}

model Review {
  id          String    @id @default(cuid())
  userId      String
  activityId  String
  rating      Int
  comment     String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  activity    Activity  @relation(fields: [activityId], references: [id])
}

model Image {
  id          String    @id @default(cuid())
  url         String
  alt         String?
  activityId  String
  createdAt   DateTime  @default(now())
  activity    Activity  @relation(fields: [activityId], references: [id])
}

model Schedule {
  id          String    @id @default(cuid())
  activityId  String
  startTime   DateTime
  endTime     DateTime
  maxCapacity Int
  currentBookings Int @default(0)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  activity    Activity  @relation(fields: [activityId], references: [id])
  bookings    Booking[]
}

enum Role {
  USER
  ADMIN
}

enum Difficulty {
  EASY
  MODERATE
  CHALLENGING
}

enum Category {
  ADVENTURE
  CULTURAL
  NATURE
  URBAN
  RELAXATION
}

enum Status {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
} 